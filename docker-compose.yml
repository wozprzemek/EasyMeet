version: "3.9"

services:
  # postgres
  postgres:
    image: postgres:14.5
    # volumes:
    #   - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 50

  # backend
  backend:
    restart: on-failure:5
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE_HOST=$MACHINE_HOST            
    # command: sh -c "npx mikro-orm schema:create -r && npx mikro-orm migration:up && npx tsc && node dist/index.js" # production
    # command: sh -c "npx mikro-orm schema:create -r && npx mikro-orm migration:up" # dev
    depends_on:
      postgres:
        condition: service_healthy
      
  # frontend
  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_API_BASE_URL=http://$MACHINE_HOST:8000/api/
    # volumes:
    #   - frontend_build:/frontend/build
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true
    depends_on:
      - backend
